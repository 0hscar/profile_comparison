from typing import Generator
from profiles.models.business_profile import BusinessProfile
import openai
import os

def get_openai_client() -> openai.OpenAI:
    api_key = os.environ.get("OPENAI_API_KEY")
    if not api_key:
        raise RuntimeError("OPENAI_API_KEY environment variable is not set.")
    return openai.OpenAI(api_key=api_key)

def profile_assistant_response(question: str, profile: BusinessProfile) -> Generator[str, None, None]:
    """
    Stream a conversational, actionable answer to the user's business question.
    Yields chunks of text as they are generated by the AI.
    """
    client = get_openai_client()
    prompt = f"""
    You are a helpful business advisor. Given the following business profile, answer the user's question in a friendly, actionable way.

    Business:
    {profile.json()}

    User question:
    {question}
    """
    stream = client.chat.completions.create(
        model="gpt-4o",
        messages=[
            {"role": "system", "content": "You are a helpful business advisor."},
            {"role": "user", "content": prompt}
        ],
        max_tokens=256,
        temperature=0.7,
        stream=True,
    )
    for chunk in stream:
        if hasattr(chunk.choices[0].delta, "content"):
            yield chunk.choices[0].delta.content
